{"version":3,"sources":["serviceWorker.js","reducers/index.js","constants/action-types/index.js","actions/index.js","components/modal-editor/modal-editor.jsx","components/modal-editor/index.js","containers/modal-editor-container/modal-editor-container.js","components/page-wrapper/page-wrapper.js","components/page-wrapper/index.js","components/page-header/page-header.jsx","components/page-header/index.js","components/page-content/page-content.jsx","components/page-content/index.js","components/page-footer/page-footer.jsx","components/page-footer/index.js","views/page/page.jsx","views/page/index.js","components/employees-list-table/employees-list-table.jsx","components/employees-list-table/index.js","components/employee/employee.jsx","components/employee/index.js","components/employees-list-mobile/employees-list-mobile.jsx","components/employees-list-mobile/index.js","components/employees-list/employees-list.jsx","components/employees-list/index.js","containers/employees-list-container/employees-list-container.js","views/main-page/main-page.jsx","components/employee-error-message/employee-error-message.jsx","containers/employee-container/employee-container.js","views/employee-page/employee-page.jsx","App.js","store/configureStore.js","index.js"],"names":["Boolean","window","location","hostname","match","savedData","localStorage","getItem","initialState","employees","JSON","parse","id","name","surname","position","description","showEditor","employeeToEdit","reducers","state","arguments","length","undefined","action","type","Object","objectSpread","newEmployees","payload","nextId","Math","max","apply","toConsumableArray","map","item","concat","String","setItem","stringify","openEmployeeEditor","closeEmployeeEditor","editEmployee","ModalEditor","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","document","addEventListener","handleKeyUp","body","style","overflow","componentWillUnmount","removeEventListener","e","onClose","keyCode","handleSubmit","event","preventDefault","_this$props","onSubmit","_this$state","checkFields","console","error","handleNameChange","setState","handleSurnameChange","handlePositionChange","handleDescriptionChange","_this$props2","_name","_surname","_position","_description","_this$state2","_props$name","_props$surname","_props$position","_props$description","_this2","_this$props3","_this$state3","disabledSubmit","react_default","a","createElement","react","className","title","onClick","htmlFor","placeholder","value","onChange","target","disabled","Component","defaultProps","require","connect","_ref2","employee","find","dispatch","_bindActionCreators","bindActionCreators","Actions","_ref","modal_editor","assign","PageWrapper","children","PageHeader","PropTypes","string","shape","text","isRequired","href","mix","link","react_router_dom","to","index_es","icon","faChevronLeft","PageContent","page_header","PageFooter","trim","page_wrapper","Date","getFullYear","Page","modal_editor_container","page_content","page_footer","EmployeesListTable","onEmployeeClick","key","tabIndex","onKeyUp","Employee","onOpenEmployeeEditor","EmployeesListMobile","employee_employee","arrayOf","func","withRouter","history","handleEmployeeClick","push","innerWidth","employees_list_mobile","employees_list_table","_ref2$employees","employees_list","MainPage","page","employees_list_container","EmployeeErrorMessage","EmployeeContainer","_isEmpty","employee_error_message","_ref3","propsTypes","params","EmployeePage","employee_container","App","react_router","path","component","store","createStore","reducer","applyMiddleware","thunk","logger","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a98f5902.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  OPEN_EMPLOYEE_EDITOR,\n  CLOSE_EMPLOYEE_EDITOR,\n  EDIT_EMPLOYEE_DATA\n} from '../constants/action-types';\n\nconst savedData = localStorage.getItem('employees');\n\nconst initialState = {\n  employees: savedData ? JSON.parse(savedData) : [{\n    id: '1',\n    name: 'Ирина',\n    surname: 'Сердюковская',\n    position: 'Маркетолог',\n    description: 'Как анализировать конкурентов',\n  }, {\n    id: '2',\n    name: 'Игорь ',\n    surname: 'Шеньшин',\n    position: 'Маркетолог',\n    description: '5 способов заработать на рекламе в Facebook',\n  }, {\n    id: '3',\n    name: 'Леонид ',\n    surname: 'Никулин',\n    position: 'UX/UX дизайнер',\n    description: 'Основы мобильного дизайна в Figma',\n  }, {\n    id: '4',\n    name: 'Ильназ',\n    surname: 'Гильязов',\n    position: 'Front-end разработчик',\n    description: 'Автор курсов',\n  }, {\n    id: '5',\n    name: 'Татьяна ',\n    surname: 'Тен',\n    position: 'Front-end разработчик',\n    description: 'Преподаватель курсов',\n  }],\n  showEditor: false,\n  employeeToEdit: -1\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case OPEN_EMPLOYEE_EDITOR:\n      return {\n        ...state,\n        showEditor: true,\n        employeeToEdit: action.id\n      };\n\n    case CLOSE_EMPLOYEE_EDITOR:\n      return {\n        ...state,\n        showEditor: false,\n      };\n\n    case EDIT_EMPLOYEE_DATA:\n      return {\n        ...state,\n        showEditor: false,\n        employees: (() => {\n          const {\n            employees,\n            employeeToEdit: id\n          } = state;\n\n          const { payload } = action;\n\n          let newEmployees;\n\n          if (id === -1) {\n            const nextId = Math.max(...employees.map(item => +item.id)) + 1;\n\n            newEmployees = employees.concat({\n              ...payload,\n              id: String(nextId)\n            });\n          } else {\n            newEmployees = employees.map(item => (\n              (item.id !== id)\n                ? item\n                : ({ ...payload, id })\n            ));\n          }\n\n          localStorage.setItem('employees', JSON.stringify(newEmployees));\n\n          return newEmployees;\n        })()\n      };\n\n    default:\n      return state;\n  }\n};\n","export const OPEN_EMPLOYEE_EDITOR = 'OPEN_EMPLOYEE_EDITOR';\r\nexport const CLOSE_EMPLOYEE_EDITOR = 'CLOSE_EMPLOYEE_EDITOR';\r\nexport const EDIT_EMPLOYEE_DATA = 'EDIT_EMPLOYEE_DATA';\r\n","import {\r\n  OPEN_EMPLOYEE_EDITOR,\r\n  CLOSE_EMPLOYEE_EDITOR,\r\n  EDIT_EMPLOYEE_DATA\r\n} from '../constants/action-types';\r\n\r\nexport const openEmployeeEditor = (id = -1) => ({\r\n  type: OPEN_EMPLOYEE_EDITOR,\r\n  id\r\n});\r\n\r\nexport const closeEmployeeEditor = () => ({\r\n  type: CLOSE_EMPLOYEE_EDITOR\r\n});\r\n\r\nexport const editEmployee = payload => ({\r\n  type: EDIT_EMPLOYEE_DATA,\r\n  payload\r\n});\r\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string,\n  surname: PropTypes.string,\n  position: PropTypes.string,\n  description: PropTypes.string,\n  onClose: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nconst defaultProps = {\n  name: '',\n  surname: '',\n  position: '',\n  description: ''\n};\n\nclass ModalEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    const {\n      name = '',\n      surname = '',\n      position = '',\n      description = ''\n    } = props;\n\n    this.state = {\n      name,\n      surname,\n      position,\n      description\n    };\n  }\n\n  componentDidMount = () => {\n    document.addEventListener('keyup', this.handleKeyUp);\n    document.body.style.overflow = 'hidden';\n  }\n\n  componentWillUnmount = () => {\n    document.removeEventListener('keyup', this.handleKeyUp);\n    document.body.style.overflow = '';\n  }\n\n  handleKeyUp = (e) => {\n    const { onClose } = this.props;\n    const { keyCode } = e;\n\n    switch (keyCode) {\n      case 27:\n        onClose();\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const {\n      id,\n      onSubmit\n    } = this.props;\n\n    const {\n      name,\n      surname,\n      position,\n      description\n    } = this.state;\n\n    if (!this.checkFields()) {\n      console.error(`Необходимо ${id === '-1' ? 'заполнить все поля' : 'изменить хотя бы одно поле'}`);\n\n      return;\n    }\n\n    onSubmit({\n      name,\n      surname,\n      position,\n      description\n    });\n  }\n\n  handleNameChange = (name) => {\n    this.setState({\n      name\n    });\n  }\n\n  handleSurnameChange = (surname) => {\n    this.setState({\n      surname\n    });\n  }\n\n  handlePositionChange = (position) => {\n    this.setState({\n      position\n    });\n  }\n\n  handleDescriptionChange = (description) => {\n    this.setState({\n      description\n    });\n  }\n\n  checkFields = () => {\n    const {\n      name: _name,\n      surname: _surname,\n      position: _position,\n      description: _description\n    } = this.props;\n\n    const {\n      name,\n      surname,\n      position,\n      description\n    } = this.state;\n\n    return (name && surname && position && description)\n      && (name !== _name || surname !== _surname || position !== _position || description !== _description);\n  }\n\n  render() {\n    const {\n      id,\n      onClose\n    } = this.props;\n\n    const {\n      name,\n      surname,\n      position,\n      description\n    } = this.state;\n\n    const disabledSubmit = !this.checkFields();\n\n    return (\n      <Fragment>\n        <div className=\"modal-editor\">\n          <button\n            className=\"btn btn-primary modal-editor__close-button\"\n            type=\"button\"\n            title=\"Закрыть редактор\"\n            onClick={onClose}\n          >\n            {'X'}\n          </button>\n          <h3 className=\"modal-editor__title\">\n            {(id === '-1')\n              ? 'Добавление нового сотрудника'\n              : 'Редактирование карточки сотрудника'\n            }\n          </h3>\n          <form\n            action=\"#\"\n            className=\"modal-editor-form\"\n            id=\"modal-editor-form\"\n            onSubmit={this.handleSubmit}\n          >\n            <label\n              className=\"modal-editor-form__label\"\n              htmlFor=\"modal-editor-form__name-field\"\n            >\n              {'Имя'}\n\n              <input\n                id=\"modal-editor-form__name-field\"\n                className=\"modal-editor-form__field modal-editor-form__name-field\"\n                type=\"text\"\n                placeholder=\"Имя\"\n                value={name}\n                onChange={e => this.handleNameChange(e.target.value)}\n              />\n            </label>\n            <label\n              className=\"modal-editor-form__label\"\n              htmlFor=\"modal-editor-form__surname-field\"\n            >\n              {'Фамилия'}\n              <input\n                id=\"modal-editor-form__surname-field\"\n                className=\"modal-editor-form__field modal-editor-form__surname-field\"\n                type=\"text\"\n                placeholder=\"Фамилия\"\n                value={surname}\n                onChange={e => this.handleSurnameChange(e.target.value)}\n              />\n            </label>\n            <label\n              className=\"modal-editor-form__label\"\n              htmlFor=\"modal-editor-form__position-field\"\n            >\n              {'Должность'}\n              <input\n                id=\"modal-editor-form__position-field\"\n                className=\"modal-editor-form__field modal-editor-form__position-field\"\n                type=\"text\"\n                placeholder=\"Должность\"\n                value={position}\n                onChange={e => this.handlePositionChange(e.target.value)}\n              />\n            </label>\n            <label\n              className=\"modal-editor-form__label\"\n              htmlFor=\"modal-editor-form__description-field\"\n            >\n              {'Описание'}\n              <textarea\n                id=\"modal-editor-form__description-field\"\n                className=\"modal-editor-form__field modal-editor-form__description-field\"\n                type=\"text\"\n                placeholder=\"Описание\"\n                value={description}\n                onChange={e => this.handleDescriptionChange(e.target.value)}\n              />\n            </label>\n            <button\n              className=\"btn btn-primary modal-editor__submit-button\"\n              type=\"button\"\n              title={disabledSubmit\n                ? `Необходимо ${id === '-1' ? 'заполнить все поля' : 'изменить хотя бы одно поле'}`\n                : 'Сохранить'\n              }\n              disabled={disabledSubmit}\n              onClick={this.handleSubmit}\n            >\n              {'Сохранить изменения'}\n            </button>\n          </form>\n        </div>\n        {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */}\n        <div\n          className=\"overlay\"\n          onClick={onClose}\n        />\n      </Fragment>\n    );\n  }\n}\n\nModalEditor.propTypes = propTypes;\nModalEditor.defaultProps = defaultProps;\nexport default ModalEditor;\n","export { default } from './modal-editor';\r\n\r\nrequire('./modal-editor.scss');\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport * as Actions from '../../actions';\r\n\r\nimport ModalEditor from '../../components/modal-editor';\r\n\r\nconst ModalEditorContainer = ({ showEditor, employee, onClose, onSubmit }) => (\r\n  showEditor && (\r\n    <ModalEditor\r\n      {...employee}\r\n      onClose={onClose}\r\n      onSubmit={onSubmit}\r\n    />\r\n  )\r\n);\r\n\r\nconst mapStateToProps = ({ employees, showEditor, employeeToEdit }) => {\r\n  const employee = employeeToEdit === '-1'\r\n    ? { id: employeeToEdit }\r\n    : employees.find(item => item.id === employeeToEdit);\r\n\r\n  return {\r\n    employee: employee || { id: '-1' },\r\n    showEditor\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  const {\r\n    closeEmployeeEditor,\r\n    editEmployee\r\n  } = bindActionCreators(Actions, dispatch);\r\n\r\n  return {\r\n    onClose: closeEmployeeEditor,\r\n    onSubmit: editEmployee\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalEditorContainer);\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n};\n\nconst PageWrapper = ({ children }) => (\n  <div className=\"page-wrapper\">\n    {children}\n  </div>\n);\n\nPageWrapper.propTypes = propTypes;\nexport default PageWrapper;\n","export { default } from './page-wrapper';\n\nrequire('./page-wrapper.scss');","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons';\n\nexport const pageHeaderPropTypes = {\n  title: PropTypes.string,\n  link: PropTypes.shape({\n    text: PropTypes.string.isRequired,\n    href: PropTypes.string.isRequired,\n  })\n};\n\nconst propTypes = {\n  ...pageHeaderPropTypes,\n  mix: PropTypes.string,\n};\n\nconst defaultProps = {\n  mix: '',\n  title: 'Список сотрудников' // eslint-disable-line react/default-props-match-prop-types\n};\n\nconst PageHeader = ({ mix, link, title }) => (\n  <header className={`${mix} page-header`}>\n    {link && (\n      <Link\n        className=\"btn btn-primary page-header__link\"\n        to={link.href}\n        title={link.text}\n      >\n        <FontAwesomeIcon\n          className=\"btn__icon\"\n          icon={faChevronLeft}\n        />\n        <span className=\"btn__text\">\n          {link.text}\n        </span>\n      </Link>\n    )}\n    <h1 className=\"page-header__title\">\n      {title}\n    </h1>\n  </header>\n);\n\nPageHeader.propTypes = propTypes;\nPageHeader.defaultProps = defaultProps;\nexport default PageHeader;\n","export { default, pageHeaderPropTypes } from './page-header';\n\nrequire('./page-header.scss');\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport PageHeader, { pageHeaderPropTypes } from '../page-header';\n\nexport const headerPropTypes = pageHeaderPropTypes;\n\nconst propTypes = {\n  ...headerPropTypes,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n};\n\nconst defaultProps = {};\n\nconst PageContent = ({ title, link, children }) => (\n  <div className=\"page-content\">\n    <PageHeader\n      mix=\"page-content__header\"\n      title={title}\n      link={link}\n    />\n    <div className=\"page-content__main\">\n      {children}\n    </div>\n  </div>\n);\n\nPageContent.propTypes = propTypes;\nPageContent.defaultProps = defaultProps;\nexport default PageContent;\n","export { default, headerPropTypes } from './page-content';\n\nrequire('./page-content.scss');\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport PageWrapper from '../page-wrapper';\n\nconst propTypes = {\n  mix: PropTypes.string,\n};\n\nconst defaultProps = {\n  mix: ''\n};\n\nconst PageFooter = ({ mix }) => (\n  <footer className={`${mix} page-footer`.trim()}>\n    <PageWrapper>\n      <p className=\"page-footer__text\">\n        {`\\u00A9 Алексей Трубицын | ${(new Date()).getFullYear()}`}\n      </p>\n    </PageWrapper>\n  </footer>\n);\n\nPageFooter.propTypes = propTypes;\nPageFooter.defaultProps = defaultProps;\nexport default PageFooter;\n","export { default } from './page-footer';\n\nrequire('./page-footer.scss');","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ModalEditorContainer from '../../containers/modal-editor-container';\n\nimport PageWrapper from '../../components/page-wrapper';\nimport PageContent, { headerPropTypes } from '../../components/page-content';\nimport PageFooter from '../../components/page-footer';\n\nconst propTypes = {\n  ...headerPropTypes,\n  mix: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n};\n\nconst defaultProps = {\n  mix: '',\n};\n\nconst Page = ({ mix, link, title, children }) => (\n  <div className={`${mix} page`.trim()}>\n    <ModalEditorContainer />\n    <div className=\"page__content\">\n      <PageWrapper>\n        <PageContent\n          title={title}\n          link={link}\n        >\n          {children}\n        </PageContent>\n      </PageWrapper>\n    </div>\n    <PageFooter />\n  </div>\n);\n\nPage.propTypes = propTypes;\nPage.defaultProps = defaultProps;\nexport default Page;\n","export { default } from './page';\n\nrequire('./page.scss');\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n  mix: PropTypes.string,\n  employees: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      surname: PropTypes.string.isRequired,\n      position: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onEmployeeClick: PropTypes.func.isRequired,\n};\n\nconst defaultProps = {\n  mix: ''\n};\n\nconst EmployeesListTable = ({ mix, employees, onEmployeeClick }) => (\n  <table className={`${mix} employees-list-table`.trim()}>\n    <thead className=\"employees-list-table__head\">\n      <tr className=\"employees-list-table__row employees-list-table__row_thead\">\n        <th className=\"employees-list-table__cell employees-list-table__cell_thead\">\n          {'Имя'}\n        </th>\n        <th className=\"employees-list-table__cell employees-list-table__cell_thead\">\n          {'Фамилия'}\n        </th>\n        <th className=\"employees-list-table__cell employees-list-table__cell_thead\">\n          {'Должность'}\n        </th>\n      </tr>\n    </thead>\n    <tbody className=\"employees-list-table__tbody\">\n      {employees.map(({ id, name, surname, position }) => (\n        <tr\n          key={id}\n          title={`Открыть карточку сотрудника с ID ${id} (${surname} ${name})`}\n          className=\"employees-list-table__row\"\n          onClick={() => onEmployeeClick(id)}\n          tabIndex={0}\n          onKeyUp={e => (e.keyCode === 13 ? onEmployeeClick(id) : null)}\n        >\n          <td className=\"employees-list-table__cell\">\n            {name}\n          </td>\n          <td className=\"employees-list-table__cell\">\n            {surname}\n          </td>\n          <td className=\"employees-list-table__cell\">\n            {position}\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nEmployeesListTable.propTypes = propTypes;\nEmployeesListTable.defaultProps = defaultProps;\nexport default EmployeesListTable;\n","export { default } from './employees-list-table';\n\nrequire('./employees-list-table.scss');\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  surname: PropTypes.string.isRequired,\n  position: PropTypes.string.isRequired,\n  mix: PropTypes.string,\n  description: PropTypes.string,\n  onOpenEmployeeEditor: PropTypes.func,\n};\n\nconst defaultProps = {\n  mix: '',\n  description: null,\n  onOpenEmployeeEditor: null\n};\n\nconst Employee = (props) => {\n  const {\n    mix,\n    id,\n    name,\n    surname,\n    position,\n    description,\n    onOpenEmployeeEditor\n  } = props;\n\n  return (\n    <div className={`${mix} employee`.trim()}>\n      <span className=\"employee__grid-cell employee__grid-cell_key\">\n        {'Имя'}\n      </span>\n      <span className=\"employee__grid-cell employee__grid-cell_value\">\n        {name}\n      </span>\n      <span className=\"employee__grid-cell employee__grid-cell_key\">\n        {'Фамилия'}\n      </span>\n      <span className=\"employee__grid-cell employee__grid-cell_value\">\n        {surname}\n      </span>\n      <span className=\"employee__grid-cell employee__grid-cell_key\">\n        {'Должность'}\n      </span>\n      <span className=\"employee__grid-cell employee__grid-cell_value\">\n        {position}\n      </span>\n      {(typeof description === 'string') && (\n        <Fragment>\n          <span className=\"employee__grid-cell employee__grid-cell_key\">\n            {'Описание'}\n          </span>\n          <span className=\"employee__grid-cell employee__grid-cell_value\">\n            {description}\n          </span>\n        </Fragment>\n      )}\n      {onOpenEmployeeEditor && (\n        <div className=\"employee__grid-row\">\n          <button\n            className=\"btn btn-primary employee__edit-button\"\n            type=\"button\"\n            onClick={() => onOpenEmployeeEditor(id)}\n            title={`Редактировать карточку сотдруника с ID ${id} (${name}, ${surname})`}\n          >\n            {'Редактировать'}\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nEmployee.propTypes = propTypes;\nEmployee.defaultProps = defaultProps;\nexport default Employee;\n","export { default } from './employee';\n\nrequire('./employee.scss');","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport Employee from '../employee';\n\nconst propTypes = {\n  mix: PropTypes.string,\n  employees: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      surname: PropTypes.string.isRequired,\n      position: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nconst defaultProps = {\n  mix: ''\n};\n\nconst EmployeesListMobile = ({ mix, employees }) => (\n  <ul className={`${mix} employees-list-mobile`.trim()}>\n    {employees.map(({ id, name, surname, position }) => (\n      <li\n        className=\"employees-list-mobile__item employees-list-item\"\n        key={id}\n      >\n        <Link\n          to={`/employee/${id}`}\n          className=\"employees-list-item__link\"\n          title={`Открыть карточку сотрудника с ID ${id} (${surname} ${name})`}\n        >\n          <span className=\"visually-hidden\">\n            {'Подробней'}\n          </span>\n        </Link>\n        <Employee\n          mix=\"employees-list-item__grid\"\n          id={id}\n          name={name}\n          surname={surname}\n          position={position}\n        />\n      </li>\n    ))}\n  </ul>\n);\n\nEmployeesListMobile.propTypes = propTypes;\nEmployeesListMobile.defaultProps = defaultProps;\nexport default EmployeesListMobile;\n","export { default } from './employees-list-mobile';\n\nrequire('./employees-list-mobile.scss');\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { withRouter } from 'react-router-dom';\n\nimport EmployeesListTable from '../employees-list-table';\nimport EmployeesListMobile from '../employees-list-mobile';\n\nexport const employeesListPropTypes = {\n  employees: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      surname: PropTypes.string.isRequired,\n      position: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onOpenEmployeeEditor: PropTypes.func.isRequired,\n};\n\nconst propTypes = {\n  ...employeesListPropTypes,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nconst EmployeesList = (props) => {\n  const {\n    employees,\n    history,\n    onOpenEmployeeEditor\n  } = props;\n\n  const handleEmployeeClick = (id) => {\n    history.push(`/employee/${id}`);\n  };\n\n  return (\n    <div className=\"employees-list\">\n      <div className=\"employees-list__header employees-list-header\">\n        <p className=\"employees-list-header__message\">\n          {(!employees.length\n            ? 'Список пуст. Создать первого сотрудника?'\n            : `Сотрудников: ${employees.length}`\n          )}\n        </p>\n        <button\n          title=\"Создать нового сотрудника\"\n          type=\"button\"\n          className=\"btn btn-primary employees-list-header__create-button\"\n          onClick={() => onOpenEmployeeEditor(-1)}\n        >\n          {'Добавить'}\n        </button>\n      </div>\n      {(window.innerWidth < 768\n        ? (\n          <EmployeesListMobile\n            mix=\"employees-list__table\"\n            employees={employees}\n            onEmployeeClick={handleEmployeeClick}\n          />\n        )\n        : (\n          <EmployeesListTable\n            mix=\"employees-list__table\"\n            employees={employees}\n            onEmployeeClick={handleEmployeeClick}\n          />\n        ))\n      }\n    </div>\n  );\n};\n\nEmployeesList.propTypes = propTypes;\nexport default withRouter(EmployeesList);\n","export { default, employeesListPropTypes } from './employees-list';\n\nrequire('./employees-list.scss');\n","import React from 'react';\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport * as Actions from '../../actions';\n\nimport EmployeesList, { employeesListPropTypes } from '../../components/employees-list';\n\nconst EmployeesListContainer = ({ employees, onOpenEmployeeEditor }) => (\n  <EmployeesList\n    employees={employees}\n    onOpenEmployeeEditor={onOpenEmployeeEditor}\n  />\n);\n\nconst mapStateToProps = ({ employees = [] }) => ({ employees });\n\nconst mapDispatchToProps = (dispatch) => {\n  const bindedActions = bindActionCreators(Actions, dispatch);\n\n  return {\n    onOpenEmployeeEditor: bindedActions.openEmployeeEditor\n  };\n};\n\nEmployeesListContainer.propTypes = employeesListPropTypes;\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeesListContainer);\n","import React from 'react';\n\nimport Page from '../page';\nimport EmployeesListContainer from '../../containers/employees-list-container';\n\nconst MainPage = () => (\n  <Page\n    mix=\"main-page\"\n    title=\"Список сотрудников\"\n  >\n    <EmployeesListContainer />\n  </Page>\n);\n\nexport default MainPage;\n","import React from 'react';\n\nconst EmployeeErrorMessage = () => (\n  <h2 className=\"employee-error-message\">\n    {'Сотрудник не найден'}\n  </h2>\n);\n\nexport default EmployeeErrorMessage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport _isEmpty from 'lodash/isEmpty';\n\nimport * as Actions from '../../actions';\n\nimport Employee from '../../components/employee';\nimport EmployeeErrorMessage from '../../components/employee-error-message';\n\nconst propTypes = {\n  employee: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    surname: PropTypes.string.isRequired,\n    position: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n  }),\n  onOpenEmployeeEditor: PropTypes.func.isRequired,\n};\n\nconst defaultProps = {\n  employee: null\n};\n\nconst EmployeeContainer = ({ employee, onOpenEmployeeEditor }) => (\n  _isEmpty(employee)\n    ? (\n      <EmployeeErrorMessage />\n    ) : (\n      <Employee\n        {...employee}\n        onOpenEmployeeEditor={onOpenEmployeeEditor}\n      />\n    )\n);\n\nconst mapStateToProps = ({ employees }, { id }) => {\n  const employee = employees.find(item => item.id === id);\n\n  return ({ employee });\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  const { openEmployeeEditor } = bindActionCreators(Actions, dispatch);\n\n  return {\n    onOpenEmployeeEditor: openEmployeeEditor\n  };\n};\n\nEmployeeContainer.propTypes = propTypes;\nEmployeeContainer.defaultProps = defaultProps;\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeeContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Page from '../page';\nimport EmployeeContainer from '../../containers/employee-container';\n\nconst propsTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nconst EmployeePage = ({ match }) => {\n  const id = match.params.id;\n\n  return (\n    <Page\n      mix=\"employee-page\"\n      title={`Данные сотрудника ID #${id}`}\n      link={{\n        href: '/',\n        text: 'К списку'\n      }}\n    >\n      <EmployeeContainer id={id} />\n    </Page>\n  );\n}\n\nEmployeePage.propsTypes = propsTypes;\nexport default EmployeePage;\n","import React from 'react';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport MainPage from './views/main-page';\nimport EmployeePage from './views/employee-page';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/employee/:id\" component={EmployeePage} />\n        <Route path=\"/\" component={MainPage} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from '../reducers';\n\nexport default function configureStore(initialState) {\n  const store = createStore(\n    reducer,\n    initialState,\n    applyMiddleware(thunk, logger)\n  );\n\n  return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport configureStore from './store/configureStore';\n\nimport './normalize.css';\nimport './index.css';\n\nimport App from './App';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}